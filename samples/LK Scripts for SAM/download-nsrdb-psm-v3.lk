////////////////////////////////////////////////////////////////////////////////
//
// This script downloads a solar resource data file from the NREL
// National Solar Radiation Database (NSRDB) PSM V3 dataset and stores
// it in the folder designated to store downloaded weather files for SAM.
// 
// To access the API, you need an NREL API key, which you can request
// for free by submitting an email address at https://developer.nrel.gov/signup/.
//
// If you use an invalid email address or API key, the script will run and
// display an error message about an invalid latitude and longitude.
//
// After you download a file, go to the Location and Resource input page,
// and click Refresh Library to add the file to your solar resource library.
//
// Written and tested in SAM 2017.9.5 r4 in July 2018
//
////////////////////////////////////////////////////////////////////////////////

// Go to https://developer.nrel.gov/signup/ to request an NREL API key and
// replace these values with your key and the email address you used to request
// the key. (The variables are strings, so enclose the values in quotes.)
nrel_api_email = '';
nrel_api_key = '';

function download_nsrdb( email, apikey )
{

	// get address string from user
	msg = 'Enter your location as a street address or latitude, longitude:\n\n'
		+ 'Examples:\n'
		+'   15031 denver west parkway golden co\n'
		+'   40.1,-109.3\n\n'
		+'The email address you used to register SAM will be sent to the NSRDB at NREL.\n'
		+'If you do not want share your email address with the NSRDB, press Cancel now.';
	
	loc = in( msg, '', 'NREL NSRDB Solar Data Download' );
	if ( '' == loc ) return '';
	
	is_addr = false;
	len = strlen(loc);
	for( i=0;i<len;i++ )
		if ( isalpha(ch(loc,i)) )
			is_addr = true;
	
	// convert address string to latitude, longitude pair
	lat = 0;
	lon = 0;
	locname = '';
	if ( is_addr) // convert street address to latitude, longitude
	{
		coords = geocode( loc, 'Geocoding address: ' + loc + '...' ); // uses Google API
		if ( typeof(coords) == 'table' )
		{
			lat = to_real(coords.lat);
			lon = to_real(coords.lon);
			
			for( i=0;i<len;i++ )
			{
				C = ch(loc,i);
				if( isalpha(C)
					|| isdigit(C)
					|| C == ','
					|| C == ' '
					|| C == '_' )
					locname += C;
			}			
		}
		else
		{
			msgbox( 'Error translating address to latitude/longitude:\n\n' + loc );
			return '';
		}
	}
	else // convert latitude, longitude pair from string to numbers
	{
		parts = split(loc,',');
		if ( #parts < 2 )
		{
			msgbox( 'Incorrectly formatted latitude, longitude.' );
			return '';
		}
		
		lat = to_real(parts[0]);
		lon = to_real(parts[1]);
		locname = sprintf( 'lat%.5lf_lon%.5lf', lat, lon );
	}
	
	// data avalailable from NSRDB API
	options = [ 'TMY' ];
	for( year = 1998; year <= 2016; year++ )
		options[#options] = to_string(year);
	
	// get data year or TMY from user	
	dataset = choose_from_list( options, 'Select data set (tmy or specific year):', 'NREL NSRDB', 0 );
	dataset = lower(dataset);
	if ( '' == dataset )
		return '';
	
	// construct URL for call to NSRDB API
	// https://developer.nrel.gov/docs/solar/nsrdb/psm3_data_download/
	url = webapi( 'nsrdb_download' ); 
	url = replace(url, '<USEREMAIL>', email );
	url = replace(url, '<SAMAPIKEY>', apikey );
	url = replace(url, '<LON>', lon );
	url = replace(url, '<LAT>', lat );
	url = replace(url, '<DATASET>', dataset );
	
	outln(url);	
	logmsg( url );
	
	// path and filename to store downloaded data
	// wfdownloaddir() stores in folder for downloaded weather files
	// so that file will be added to solar resource library
	wf = wfdownloaddir() + '/' + locname + '_' + dataset + '.csv';
	
	// make call to NSRDB API
	if ( !curl( url, { 'file' = wf , 'message' = 'Downloading NSRDB solar data for: ' + locname + '...' } ) )
	{
		msgbox('Error downloading data from the NREL NSRDB');
		return '';
	}
	
	// run wfcheck module to see if there are any data problems with the file
	ssc = ssc_create();
	ssc_var( ssc, 'input_file', wf );
	result = ssc_exec( ssc, 'wfcheck', {'show_dialog'=true, 'dialog_title'='Checking weather file...'} );
	ssc_free( ssc );
	
	if ( typeof(result) == 'string' )
	{
		obj = json_file(wf );	
		msgbox('Error in downloaded weather file data for ' 
			+ locname + ':\n' 
			+ ( (typeof(obj)=='table' && obj ?@ 'errors') ? obj.errors[0] : result ) );
		remove_file( wf );
		return '';
	}
	
	return wf;
}

////////////////////////////////////////////////////////////////////////////////
//
// Main
//
////////////////////////////////////////////////////////////////////////////////

file='No API key provided.';
if ( nrel_api_key == '' )
	msgbox( 'No API key provided!\nTo request an NREL API key, go to '
	        + 'https://developer.nrel.gov/signup/. When you recieve \n'
	        + 'your key, replace the values of nrel_api_email and nrel_api_key '
	        + 'with your email address and key.');
else
	file = download_nsrdb( nrel_api_email , nrel_api_key );
	
outln(file);